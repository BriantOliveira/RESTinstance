{
  "imposters": [
    {
      "name": "fake objects for :8080",
      "port": 8273,
      "protocol": "http",
      "defaultResponse": {
        "statusCode": 400,
        "body": {
          "error": "Bad request"
        },
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "stubs": [
        {
          "predicates": [
            {
              "equals": {
                "method": "GET"
              }
            }
          ],
          "responses": [
            {
              "inject": "<%- stringify(filename, 'mocks/get.js') %>"
            }
          ]
        },
        {
          "predicates": [
            {
              "equals": {
                "method": "POST"
              }
            }
          ],
          "responses": [
            {
              "inject": "<%- stringify(filename, 'mocks/post.js') %>"
            }
          ]
        },
        {
          "predicates": [
            {
              "equals": {
                "method": "PUT"
              }
            }
          ],
          "responses": [
            {
              "inject": "<%- stringify(filename, 'mocks/put.js') %>"
            }
          ]
        },
        {
          "predicates": [
            {
              "equals": {
                "method": "PATCH"
              }
            }
          ],
          "responses": [
            {
              "inject": "<%- stringify(filename, 'mocks/patch.js') %>"
            }
          ]
        },
        {
          "predicates": [
            {
              "equals": {
                "method": "DELETE"
              }
            }
          ],
          "responses": [
            {
              "inject": "<%- stringify(filename, 'mocks/delete.js') %>"
            }
          ]
        }
      ]
    },
    {
      "name": "body params generator",
      "port": 8274,
      "protocol": "http",
      "defaultResponse": {
        "statusCode": 400,
        "body": {
          "error": "Usage: POST JSON Schema in the request body, then use GET."
        },
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "stubs": [
        {
          "predicates": [
            {
              "equals": {
                "method": "GET"
              }
            }
          ],
          "responses": [
            {
              "inject": "<%- stringify(filename, 'jsf/get.js') %>"
            }
          ]
        },
        {
          "predicates": [
            {
              "equals": {
                "method": "POST"
              }
            }
          ],
          "responses": [
            {
              "inject": "<%- stringify(filename, 'jsf/post.js') %>"
            }
          ]
        }
      ]
    }
  ]
}